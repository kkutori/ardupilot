# hw definition file for processing by chibios_hwdef.py for JCFH-A1

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 16000000

# USB
USB_VENDOR 0x1B8C   # vid
USB_PRODUCT 0x0036  # pid
USB_STRING_MANUFACTURER "jiachuang"

# board ID for firmware load
APJ_BOARD_ID 1013



# flash size in KB
FLASH_SIZE_KB 2048

# bootloader takes first sector
FLASH_RESERVE_START_KB 128

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

# ChibiOS system timer
STM32_ST_USE_TIMER 5



# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART2 USART6 USART1 UART4 UART8 UART7 USART3 UART5 OTG2

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1




# UARTs

# USART1 is GPS1
PA10 USART1_RX USART1
PA9  USART1_TX USART1

# USART2 is telem1
PD6 USART2_RX USART2
PD5 USART2_TX USART2

#USART3 GPS2
PD9 USART3_RX USART3
PD8 USART3_TX USART3

# UART4 telem2
PB8 UART4_RX UART4
PB9 UART4_TX UART4

# UART5 RC
PB12 UART5_RX UART5
PB13 UART5_TX UART5

# USART6 debug
PC7 USART6_RX USART6 
PC6 USART6_TX USART6

# UART7 telem3
PE7 UART7_RX UART7
PE8 UART7_TX UART7

# UART8 TEL4
PE0 UART8_RX UART8
PE1 UART8_TX UART8 



# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD




# SPI buses

# SPI1 - BMI088
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
PA8  BMI088_1_G_CS CS
PA4  BMI088_1_A_CS CS


# SPI2 - FLASH
PD3 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2
PD4  FLASH_CS CS SPEED_VERYLOW

# SPI3 - NONE

# SPI4 - BMI088
PE2 SPI4_SCK SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4
PC13  BMI088_2_G_CS CS
PE15  BMI088_2_A_CS CS




# I2C buses

# I2C1 is on GPS port
PB6 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# I2C2 on GPS2 connector
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

# I2C3


# I2C4 is on BDMA on DMAMUX2
PD12 I2C4_SCL I2C4
PD13 I2C4_SDA I2C4

# order of I2C buses
I2C_ORDER I2C1 I2C2 I2C4

define HAL_I2C_INTERNAL_MASK 1




# enable pins
#PE3 VDD_3V3_SENSORS_EN OUTPUT LOW

# start peripheral power on
#PD11 VDD_5V_HIPOWER_EN OUTPUT HIGH
#PG4  VDD_5V_PERIPH_EN OUTPUT HIGH

#PG5  VDD_5V_RC_EN OUTPUT HIGH
#PG7  VDD_3V3_SD_CARD_EN OUTPUT HIGH






# drdy pins
PA1 DRDY1_BMI088_GYRO1 INPUT
PA0 DRDY2_BMI088_ACC1 INPUT
PE4 DRDY3_BMI088_GYRO2 INPUT
PE3 DRDY4_BMI088_ACC2 INPUT
PB5 DRDY5_BMP388 INPUT




# PWM AUX channels
PE9  TIM1_CH1 TIM1 PWM(1) GPIO(50)
PE11 TIM1_CH2 TIM1 PWM(2) GPIO(51)
PE13 TIM1_CH3 TIM1 PWM(3) GPIO(52)
PE14 TIM1_CH4 TIM1 PWM(4) GPIO(53)
PA2  TIM2_CH3 TIM2 PWM(5) GPIO(54)
PA3  TIM2_CH4 TIM2 PWM(6) GPIO(55)
PB0  TIM3_CH3 TIM3 PWM(7) GPIO(56)
PB1  TIM3_CH4 TIM3 PWM(8) GPIO(57)


# allow for 14 PWMs by default







# PWM output for buzzer
PD14 TIM4_CH3 TIM4 GPIO(77) ALARM


# ADC
define HAL_USE_ADC TRUE

PC4 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC5 BATT_CURRENT_SENS ADC1 SCALE(1)




# CAN bus

PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1




# GPIOs

#PA8 HEATER_EN OUTPUT LOW GPIO(80)
#define HAL_HEATER_GPIO_PIN 80
#define HAL_HAVE_IMU_HEATER 1

#G1  VDD_BRICK_nVALID INPUT PULLUP # for PowerC (CAN), considered primary power
#PG2  VDD_BRICK2_nVALID INPUT PULLUP # for PowerA
#PG0  VBUS_nVALID INPUT PULLUP
#PJ3  VDD_5V_HIPOWER_nOC INPUT PULLUP
#PJ4  VDD_5V_PERIPH_nOC INPUT PULLUP
#PB10 nSPI5_RESET_EXTERNAL1 OUTPUT HIGH











# SPI devices
SPIDEV flash            SPI2 DEVID1  FLASH_CS          MODE3  8*MHZ  8*MHZ
SPIDEV bmi088_1_a       SPI1 DEVID1  BMI088_1_A_CS     MODE3  10*MHZ 10*MHZ
SPIDEV bmi088_1_g       SPI1 DEVID2  BMI088_1_G_CS     MODE3  10*MHZ 10*MHZ
SPIDEV bmi088_2_a       SPI4 DEVID1  BMI088_2_A_CS     MODE3  10*MHZ 10*MHZ
SPIDEV bmi088_2_g       SPI4 DEVID2  BMI088_2_G_CS     MODE3  10*MHZ 10*MHZ



# 2 IMUs
IMU BMI088 SPI:bmi088_1_a SPI:bmi088_1_g ROTATION_PITCH_180_YAW_270
IMU BMI088 SPI:bmi088_2_a SPI:bmi088_2_g ROTATION_PITCH_180_YAW_270


define HAL_DEFAULT_INS_FAST_SAMPLE 5





# barometers
BARO BMP388 I2C:0:0x76

# prototypes may have no baro
define HAL_BARO_ALLOW_INIT_NO_BARO 1





# copy from Pixhawk6C hwdef.dat
# compass
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
COMPASS IST8310 I2C:0:0x0C false ROTATION_NONE

# compensate for magnetic field generated by the heater on 6C IST8310
#define HAL_HEATER_MAG_OFFSET {AP_HAL::Device::make_bus_id(AP_HAL::Device::BUS_TYPE_I2C,0,0xc,0xa),Vector3f(17,14,0)}

# we need to stop the probe of an IST8310 as an internal compass with PITCH_180
define HAL_COMPASS_DISABLE_IST8310_INTERNAL_PROBE

# copy from Pixhawk6C hwdef.dat end




# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1





# red LED marked as B/E
PD15 LED_R1 OUTPUT OPENDRAIN HIGH GPIO(0)
PC1  LED_G1 OUTPUT OPENDRAIN LOW  GPIO(1)
PD11 LED_B1 OUTPUT OPENDRAIN HIGH GPIO(2)

define AP_NOTIFY_GPIO_LED_RGB_RED_PIN 0
define AP_NOTIFY_GPIO_LED_RGB_GREEN_PIN 1
define AP_NOTIFY_GPIO_LED_RGB_BLUE_PIN 2

# use pixracer style 3-LED indicators
define AP_NOTIFY_GPIO_LED_RGB_ENABLED 1






# enable FLASH parameter storage
# w25q128 128Mb = 16MB = 16384 KB


#define HAL_WITH_RAMTRON 1
define HAL_STORAGE_SIZE 32768
#STORAGE_FLASH_PAGE 14

# allow to have have a dedicated safety switch pin
define HAL_HAVE_SAFETY_SWITCH 1
PE10 LED_SAFETY OUTPUT
PE12 SAFETY_IN INPUT PULLDOWN

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1

DMA_PRIORITY  ADC* SPI1* TIM*UP*
DMA_NOSHARE  SPI1* TIM*UP* 

# default to 45C target temp
define HAL_IMU_TEMP_DEFAULT 45

# Enable Sagetech MXS ADSB transponder
define HAL_ADSB_SAGETECH_MXS_ENABLED HAL_ADSB_ENABLED

